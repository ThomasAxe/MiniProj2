{"remainingRequest":"/Users/kanto/Desktop/MiniProj2/FrontEnd/node_modules/babel-loader/lib/index.js!/Users/kanto/Desktop/MiniProj2/FrontEnd/node_modules/eslint-loader/index.js??ref--13-0!/Users/kanto/Desktop/MiniProj2/FrontEnd/src/api/email.service.js","dependencies":[{"path":"/Users/kanto/Desktop/MiniProj2/FrontEnd/src/api/email.service.js","mtime":1576835660000},{"path":"/Users/kanto/Desktop/MiniProj2/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1701363611251},{"path":"/Users/kanto/Desktop/MiniProj2/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1701363612909},{"path":"/Users/kanto/Desktop/MiniProj2/FrontEnd/node_modules/eslint-loader/index.js","mtime":1701363611390}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9rYW50by9EZXNrdG9wL01pbmlQcm9qMi9Gcm9udEVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IEFQSV9VUkwgZnJvbSAiLi9jb25maWcuanMiOwpleHBvcnQgdmFyIGVtYWlsU2VydmljZSA9IHsKICBzZW5kRW1haWw6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfc2VuZEVtYWlsID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAvKiNfX1BVUkVfXyovCiAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHRva2VuLCBwYXlsb2FkKSB7CiAgICAgIHZhciByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoQVBJX1VSTCwgIi9lbWFpbHMiKSwgewogICAgICAgICAgICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogdG9rZW4KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShwYXlsb2FkKQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQuc2VudCk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoaGFuZGxlUmVzcG9uc2VzKHJlc3BvbnNlLnN0YXR1cykpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gc2VuZEVtYWlsKF94LCBfeDIpIHsKICAgICAgcmV0dXJuIF9zZW5kRW1haWwuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gc2VuZEVtYWlsOwogIH0oKQp9OwoKZnVuY3Rpb24gaGFuZGxlUmVzcG9uc2VzKGNvZGUpIHsKICB2YXIgbWVzc2FnZSA9ICIiOwoKICBzd2l0Y2ggKGNvZGUpIHsKICAgIGNhc2UgNDAxOgogICAgICBtZXNzYWdlID0gIk7Do28gZXN0w6EgYXV0b3JpemFkbyBhIGV4ZWN1dGFyIGVzdGEgYcOnw6NvISI7CiAgICAgIGJyZWFrOwoKICAgIGRlZmF1bHQ6CiAgICAgIG1lc3NhZ2UgPSAiTWVuc2FnZW0gZGVzY29uaGVjaWRhIjsKICAgICAgYnJlYWs7CiAgfQoKICByZXR1cm4gbWVzc2FnZTsKfQoKZXhwb3J0IGRlZmF1bHQgZW1haWxTZXJ2aWNlOw=="},{"version":3,"sources":["/Users/kanto/Desktop/MiniProj2/FrontEnd/src/api/email.service.js"],"names":["API_URL","emailService","sendEmail","token","payload","fetch","method","headers","body","JSON","stringify","response","ok","json","Error","handleResponses","status","code","message"],"mappings":";;;AAAA,OAAOA,OAAP;AAEA,OAAO,IAAMC,YAAY,GAAG;AACpBC,EAAAA,SADoB;AAAA;AAAA;AAAA,6CACVC,KADU,EACHC,OADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEDC,KAAK,WAAIL,OAAJ,cAAsB;AAChDM,gBAAAA,MAAM,EAAE,MADwC;AAEhDC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEP,mCAAiBJ;AAFV,iBAFuC;AAMhDK,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AAN0C,eAAtB,CAFJ;;AAAA;AAElBO,cAAAA,QAFkB;;AAAA,mBAUpBA,QAAQ,CAACC,EAVW;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAWTD,QAAQ,CAACE,IAAT,EAXS;;AAAA;AAAA;;AAAA;AAAA,oBAahBC,KAAK,CAACC,eAAe,CAACJ,QAAQ,CAACK,MAAV,CAAhB,CAbW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAArB;;AAmBP,SAASD,eAAT,CAAyBE,IAAzB,EAA+B;AAC7B,MAAIC,OAAO,GAAG,EAAd;;AACA,UAAQD,IAAR;AACE,SAAK,GAAL;AACEC,MAAAA,OAAO,GAAG,2CAAV;AACA;;AACF;AACEA,MAAAA,OAAO,GAAG,uBAAV;AACA;AANJ;;AAQA,SAAOA,OAAP;AACD;;AAED,eAAejB,YAAf","sourcesContent":["import API_URL from './config.js'\n\nexport const emailService = {\n  async sendEmail(token, payload) {\n    const response = await fetch(`${API_URL}/emails`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify(payload)\n    })\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  },\n\n};\n\nfunction handleResponses(code) {\n  let message = \"\"\n  switch (code) {\n    case 401:\n      message = \"Não está autorizado a executar esta ação!\"\n      break;\n    default:\n      message = \"Mensagem desconhecida\"\n      break;\n  }\n  return message\n}\n\nexport default emailService;\n"]}]}